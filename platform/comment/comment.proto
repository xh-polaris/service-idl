syntax = "proto3";

package platform.comment;

option go_package = "platform/comment";
option java_package = "com.xhpolaris.idlgen.platform.comment";
option java_outer_classname = "CommentProto";
option java_multiple_files = true;

import "platform/comment/common.proto";

// 创建评论

message CreateCommentReq {
  string text = 1;
  string firstLevelId = 2;
  string authorId = 3;
  string replyTo = 4;
  CommentType type = 5;
  string parentId = 6;
}

message CreateCommentResp {
  string id = 1;
  bool isFirst = 2;
}

// 更新评论

message UpdateCommentReq {
  string id = 1;
  string text = 2;
}

message UpdateCommentResp {
}

//根据 Id 删除评论
message DeleteCommentByIdReq {
  string id = 1;
}

message DeleteCommentByIdResp {
}

// 根据 parentId 查找所有评论


message ListCommentByParentOrFirstLevelIdReq {
  CommentType type = 1;
  string Id = 2;
  int64 skip = 3;
  int64 limit = 4;
}

message ListCommentByParentOrFirstLevelIdResp {
  repeated Comment comments = 1;
  int64 total = 2;
}

// 根据 parentId 查找所有评论


message CountCommentByParentReq {
  CommentType type = 1;
  string parentId = 2;
}

message CountCommentByParentResp {
  int64 total = 1;
}

// 根据 id 查找 comment



message RetrieveCommentByIdReq {
  string id = 1;
}

message RetrieveCommentByIdResp {
  Comment comment = 1;
}


// 根据 authorId & type 查找


message ListCommentByAuthorIdAndTypeReq {
  string authorId = 1;
  CommentType type = 2;
  int64 skip = 3;
  int64 limit = 4;
}

message ListCommentByAuthorIdAndTypeResp {
  repeated Comment comments = 1;
  int64 total = 2;
}

// 根据 replyTo & type 查找

message ListCommentByReplyToAndTypeReq {
  string replyTo = 1;
  CommentType type = 2;
  int64 skip = 3;
  int64 limit = 4;
}

message ListCommentByReplyToAndTypeResp {
  repeated Comment comments = 1;
  int64 total = 2;
}

service CommentService {
  // 创建
  rpc createComment(CreateCommentReq) returns(CreateCommentResp);
  // 修改
  rpc updateComment(UpdateCommentReq) returns(UpdateCommentResp);
  // 删除
  rpc deleteComment(DeleteCommentByIdReq) returns(DeleteCommentByIdResp);
  // 根据 parentId 或 FirstLevelId查找
  rpc listCommentByParentOrFirstLevelId(ListCommentByParentOrFirstLevelIdReq) returns(ListCommentByParentOrFirstLevelIdResp);
  // 根据 parentId 统计
  rpc countCommentByParent(CountCommentByParentReq) returns(CountCommentByParentResp);
  // 根据 id 查找
  rpc retrieveCommentById(RetrieveCommentByIdReq) returns(RetrieveCommentByIdResp);
  // 根据 authorId & type 查找
  rpc listCommentByAuthorIdAndType(ListCommentByAuthorIdAndTypeReq) returns(ListCommentByAuthorIdAndTypeResp);
  // 根据 replyTo & type 查找
  rpc listCommentByReplyToAndType(ListCommentByReplyToAndTypeReq) returns(ListCommentByReplyToAndTypeResp);

}