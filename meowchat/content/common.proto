syntax = "proto3";

package meowchat.content;

option go_package = "meowchat/content";
option java_package = "com.xhpolaris.idlgen.meowchat.content";
option java_outer_classname = "CommonProto";
option java_multiple_files = true;

message Cat {
  string id = 1;
  int64 createAt = 2;
  string age = 3;
  string communityId = 4;
  string color = 5;
  string details = 6;
  string name = 7;
  int64 popularity = 8;
  string sex = 9;
  int64 status = 10;
  string area = 11;
  bool isSnipped = 12;
  bool isSterilized = 13;
  repeated string avatars = 14;
}

message CreateImageElement {
  string catId = 1;
  string url = 2;
}

message Image {
  string id = 1;
  string url = 2;
  string catId = 3;
}

message Moment {
  string id = 1;
  int64 createAt = 2;
  optional string catId = 3;
  repeated string photos = 4; // 图片url
  string title = 5;
  string text = 6;
  string communityId = 7;
  string userId = 8;
}

message Post {
  string id = 1;
  int64 createAt = 2;
  int64 updateAt = 3;
  string title = 5;
  string text = 6;
  string coverUrl = 7;
  repeated string tags = 8;
  string userId = 9;
  bool isOfficial = 10;
}

message Plan {
  string   id = 1;
  string   name = 2;
  string   coverUrl = 3;
  string   description = 4;
  PlanType planType = 5;
  string   instruction = 6;
  int64    startTime = 7;
  int64    endTime = 8;
  string   catId = 9;
  string   communityId = 10;
  string   initiatorId = 11;
  repeated string imageUrls = 12;
  int64    createAt = 13;
  int64    maxFish = 14;
  int64    nowFish = 15;
  string   summary = 16;
  PlanState planState = 17;
}

message SearchField {
  optional string text = 1;
  optional string title = 2;
  optional string tag = 3; // 仅限Post
}

message SearchOptions {
  oneof Type {
    string allFieldsKey = 1;
    SearchField multiFieldsKey = 2;
  }
}

message MomentFilterOptions {
  optional string onlyUserId = 1;
  optional string onlyCommunityId = 2;
  repeated string onlyCommunityIds = 3;
}

message PostFilterOptions {
  optional bool onlyOfficial = 1;
  optional string onlyUserId = 2;
}

message PlanFilterOptions {
  optional string onlyCatId = 1;
  optional string onlyUserId = 2;
  optional string onlyCommunityId = 3;
  optional bool   includeGlobal = 4;
}

enum PlanType {
  TypeOther = 0;
  TypeCastrate = 1;
  TypeHeal = 2;
  TypeFeed = 3;
}

enum PlanState {
  StateUnknown = 0;
  StateFunding = 1;
  StateDoing = 2;
  StateComplete = 3;
}